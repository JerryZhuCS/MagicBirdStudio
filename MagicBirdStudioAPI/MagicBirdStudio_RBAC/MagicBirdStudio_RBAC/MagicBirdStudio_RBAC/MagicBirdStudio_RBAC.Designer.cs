//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MagicBirdStudio_RBAC", "grouprolemapping", "groupmanager", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MagicBirdStudio_RBAC.groupmanager), "roleinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MagicBirdStudio_RBAC.roleinfo))]
[assembly: EdmRelationshipAttribute("MagicBirdStudio_RBAC", "permissionmenumapping", "menuinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MagicBirdStudio_RBAC.menuinfo), "permissioninfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MagicBirdStudio_RBAC.permissioninfo))]
[assembly: EdmRelationshipAttribute("MagicBirdStudio_RBAC", "rolepermissionmapping", "permissioninfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MagicBirdStudio_RBAC.permissioninfo), "roleinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MagicBirdStudio_RBAC.roleinfo))]
[assembly: EdmRelationshipAttribute("MagicBirdStudio_RBAC", "usergroupmapping", "accountinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MagicBirdStudio_RBAC.accountinfo), "groupmanager", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MagicBirdStudio_RBAC.groupmanager))]

#endregion

namespace MagicBirdStudio_RBAC
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MagicBirdStudio_RBACContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MagicBirdStudio_RBACContainer object using the connection string found in the 'MagicBirdStudio_RBACContainer' section of the application configuration file.
        /// </summary>
        public MagicBirdStudio_RBACContainer() : base("name=MagicBirdStudio_RBACContainer", "MagicBirdStudio_RBACContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MagicBirdStudio_RBACContainer object.
        /// </summary>
        public MagicBirdStudio_RBACContainer(string connectionString) : base(connectionString, "MagicBirdStudio_RBACContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MagicBirdStudio_RBACContainer object.
        /// </summary>
        public MagicBirdStudio_RBACContainer(EntityConnection connection) : base(connection, "MagicBirdStudio_RBACContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<accountinfo> accountinfoes
        {
            get
            {
                if ((_accountinfoes == null))
                {
                    _accountinfoes = base.CreateObjectSet<accountinfo>("accountinfoes");
                }
                return _accountinfoes;
            }
        }
        private ObjectSet<accountinfo> _accountinfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<groupmanager> groupmanagers
        {
            get
            {
                if ((_groupmanagers == null))
                {
                    _groupmanagers = base.CreateObjectSet<groupmanager>("groupmanagers");
                }
                return _groupmanagers;
            }
        }
        private ObjectSet<groupmanager> _groupmanagers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<menuinfo> menuinfoes
        {
            get
            {
                if ((_menuinfoes == null))
                {
                    _menuinfoes = base.CreateObjectSet<menuinfo>("menuinfoes");
                }
                return _menuinfoes;
            }
        }
        private ObjectSet<menuinfo> _menuinfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<permissioninfo> permissioninfoes
        {
            get
            {
                if ((_permissioninfoes == null))
                {
                    _permissioninfoes = base.CreateObjectSet<permissioninfo>("permissioninfoes");
                }
                return _permissioninfoes;
            }
        }
        private ObjectSet<permissioninfo> _permissioninfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<roleinfo> roleinfoes
        {
            get
            {
                if ((_roleinfoes == null))
                {
                    _roleinfoes = base.CreateObjectSet<roleinfo>("roleinfoes");
                }
                return _roleinfoes;
            }
        }
        private ObjectSet<roleinfo> _roleinfoes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accountinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccountinfoes(accountinfo accountinfo)
        {
            base.AddObject("accountinfoes", accountinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the groupmanagers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogroupmanagers(groupmanager groupmanager)
        {
            base.AddObject("groupmanagers", groupmanager);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the menuinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomenuinfoes(menuinfo menuinfo)
        {
            base.AddObject("menuinfoes", menuinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the permissioninfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopermissioninfoes(permissioninfo permissioninfo)
        {
            base.AddObject("permissioninfoes", permissioninfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the roleinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToroleinfoes(roleinfo roleinfo)
        {
            base.AddObject("roleinfoes", roleinfo);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MagicBirdStudio_RBAC", Name="accountinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class accountinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new accountinfo object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="telephone">Initial value of the Telephone property.</param>
        /// <param name="jobLevel">Initial value of the JobLevel property.</param>
        /// <param name="entryTime">Initial value of the EntryTime property.</param>
        /// <param name="isService">Initial value of the isService property.</param>
        public static accountinfo Createaccountinfo(global::System.String userID, global::System.String userName, global::System.String telephone, global::System.String jobLevel, global::System.DateTime entryTime, global::System.Boolean isService)
        {
            accountinfo accountinfo = new accountinfo();
            accountinfo.UserID = userID;
            accountinfo.UserName = userName;
            accountinfo.Telephone = telephone;
            accountinfo.JobLevel = jobLevel;
            accountinfo.EntryTime = entryTime;
            accountinfo.isService = isService;
            return accountinfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value, "Birthday");
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, false, "Telephone");
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String E_Mail
        {
            get
            {
                return _E_Mail;
            }
            set
            {
                OnE_MailChanging(value);
                ReportPropertyChanging("E_Mail");
                _E_Mail = StructuralObject.SetValidValue(value, true, "E_Mail");
                ReportPropertyChanged("E_Mail");
                OnE_MailChanged();
            }
        }
        private global::System.String _E_Mail;
        partial void OnE_MailChanging(global::System.String value);
        partial void OnE_MailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobLevel
        {
            get
            {
                return _JobLevel;
            }
            set
            {
                OnJobLevelChanging(value);
                ReportPropertyChanging("JobLevel");
                _JobLevel = StructuralObject.SetValidValue(value, false, "JobLevel");
                ReportPropertyChanged("JobLevel");
                OnJobLevelChanged();
            }
        }
        private global::System.String _JobLevel;
        partial void OnJobLevelChanging(global::System.String value);
        partial void OnJobLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryTime
        {
            get
            {
                return _EntryTime;
            }
            set
            {
                OnEntryTimeChanging(value);
                ReportPropertyChanging("EntryTime");
                _EntryTime = StructuralObject.SetValidValue(value, "EntryTime");
                ReportPropertyChanged("EntryTime");
                OnEntryTimeChanged();
            }
        }
        private global::System.DateTime _EntryTime;
        partial void OnEntryTimeChanging(global::System.DateTime value);
        partial void OnEntryTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isService
        {
            get
            {
                return _isService;
            }
            set
            {
                OnisServiceChanging(value);
                ReportPropertyChanging("isService");
                _isService = StructuralObject.SetValidValue(value, "isService");
                ReportPropertyChanged("isService");
                OnisServiceChanged();
            }
        }
        private global::System.Boolean _isService;
        partial void OnisServiceChanging(global::System.Boolean value);
        partial void OnisServiceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MagicBirdStudio_RBAC", "usergroupmapping", "groupmanager")]
        public groupmanager groupmanager
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupmanager>("MagicBirdStudio_RBAC.usergroupmapping", "groupmanager").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupmanager>("MagicBirdStudio_RBAC.usergroupmapping", "groupmanager").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<groupmanager> groupmanagerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupmanager>("MagicBirdStudio_RBAC.usergroupmapping", "groupmanager");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<groupmanager>("MagicBirdStudio_RBAC.usergroupmapping", "groupmanager", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MagicBirdStudio_RBAC", Name="groupmanager")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class groupmanager : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new groupmanager object.
        /// </summary>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        public static groupmanager Creategroupmanager(global::System.Int32 groupID, global::System.String groupName)
        {
            groupmanager groupmanager = new groupmanager();
            groupmanager.GroupID = groupID;
            groupmanager.GroupName = groupName;
            return groupmanager;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value, "GroupID");
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupDescription
        {
            get
            {
                return _GroupDescription;
            }
            set
            {
                OnGroupDescriptionChanging(value);
                ReportPropertyChanging("GroupDescription");
                _GroupDescription = StructuralObject.SetValidValue(value, true, "GroupDescription");
                ReportPropertyChanged("GroupDescription");
                OnGroupDescriptionChanged();
            }
        }
        private global::System.String _GroupDescription;
        partial void OnGroupDescriptionChanging(global::System.String value);
        partial void OnGroupDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MagicBirdStudio_RBAC", "grouprolemapping", "roleinfo")]
        public roleinfo roleinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<roleinfo>("MagicBirdStudio_RBAC.grouprolemapping", "roleinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<roleinfo>("MagicBirdStudio_RBAC.grouprolemapping", "roleinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<roleinfo> roleinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<roleinfo>("MagicBirdStudio_RBAC.grouprolemapping", "roleinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<roleinfo>("MagicBirdStudio_RBAC.grouprolemapping", "roleinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MagicBirdStudio_RBAC", "usergroupmapping", "accountinfo")]
        public EntityCollection<accountinfo> accountinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<accountinfo>("MagicBirdStudio_RBAC.usergroupmapping", "accountinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<accountinfo>("MagicBirdStudio_RBAC.usergroupmapping", "accountinfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MagicBirdStudio_RBAC", Name="menuinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class menuinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new menuinfo object.
        /// </summary>
        /// <param name="menuID">Initial value of the MenuID property.</param>
        /// <param name="menuName">Initial value of the MenuName property.</param>
        /// <param name="menuICON">Initial value of the MenuICON property.</param>
        /// <param name="menuSort">Initial value of the MenuSort property.</param>
        /// <param name="isEffective">Initial value of the isEffective property.</param>
        public static menuinfo Createmenuinfo(global::System.Int32 menuID, global::System.String menuName, global::System.String menuICON, global::System.Int32 menuSort, global::System.Boolean isEffective)
        {
            menuinfo menuinfo = new menuinfo();
            menuinfo.MenuID = menuID;
            menuinfo.MenuName = menuName;
            menuinfo.MenuICON = menuICON;
            menuinfo.MenuSort = menuSort;
            menuinfo.isEffective = isEffective;
            return menuinfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuID
        {
            get
            {
                return _MenuID;
            }
            set
            {
                if (_MenuID != value)
                {
                    OnMenuIDChanging(value);
                    ReportPropertyChanging("MenuID");
                    _MenuID = StructuralObject.SetValidValue(value, "MenuID");
                    ReportPropertyChanged("MenuID");
                    OnMenuIDChanged();
                }
            }
        }
        private global::System.Int32 _MenuID;
        partial void OnMenuIDChanging(global::System.Int32 value);
        partial void OnMenuIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuName
        {
            get
            {
                return _MenuName;
            }
            set
            {
                OnMenuNameChanging(value);
                ReportPropertyChanging("MenuName");
                _MenuName = StructuralObject.SetValidValue(value, false, "MenuName");
                ReportPropertyChanged("MenuName");
                OnMenuNameChanged();
            }
        }
        private global::System.String _MenuName;
        partial void OnMenuNameChanging(global::System.String value);
        partial void OnMenuNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebPath
        {
            get
            {
                return _WebPath;
            }
            set
            {
                OnWebPathChanging(value);
                ReportPropertyChanging("WebPath");
                _WebPath = StructuralObject.SetValidValue(value, true, "WebPath");
                ReportPropertyChanged("WebPath");
                OnWebPathChanged();
            }
        }
        private global::System.String _WebPath;
        partial void OnWebPathChanging(global::System.String value);
        partial void OnWebPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuICON
        {
            get
            {
                return _MenuICON;
            }
            set
            {
                OnMenuICONChanging(value);
                ReportPropertyChanging("MenuICON");
                _MenuICON = StructuralObject.SetValidValue(value, false, "MenuICON");
                ReportPropertyChanged("MenuICON");
                OnMenuICONChanged();
            }
        }
        private global::System.String _MenuICON;
        partial void OnMenuICONChanging(global::System.String value);
        partial void OnMenuICONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentMenu
        {
            get
            {
                return _ParentMenu;
            }
            set
            {
                OnParentMenuChanging(value);
                ReportPropertyChanging("ParentMenu");
                _ParentMenu = StructuralObject.SetValidValue(value, "ParentMenu");
                ReportPropertyChanged("ParentMenu");
                OnParentMenuChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentMenu;
        partial void OnParentMenuChanging(Nullable<global::System.Int32> value);
        partial void OnParentMenuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuSort
        {
            get
            {
                return _MenuSort;
            }
            set
            {
                OnMenuSortChanging(value);
                ReportPropertyChanging("MenuSort");
                _MenuSort = StructuralObject.SetValidValue(value, "MenuSort");
                ReportPropertyChanged("MenuSort");
                OnMenuSortChanged();
            }
        }
        private global::System.Int32 _MenuSort;
        partial void OnMenuSortChanging(global::System.Int32 value);
        partial void OnMenuSortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isEffective
        {
            get
            {
                return _isEffective;
            }
            set
            {
                OnisEffectiveChanging(value);
                ReportPropertyChanging("isEffective");
                _isEffective = StructuralObject.SetValidValue(value, "isEffective");
                ReportPropertyChanged("isEffective");
                OnisEffectiveChanged();
            }
        }
        private global::System.Boolean _isEffective;
        partial void OnisEffectiveChanging(global::System.Boolean value);
        partial void OnisEffectiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MagicBirdStudio_RBAC", "permissionmenumapping", "permissioninfo")]
        public permissioninfo permissioninfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<permissioninfo>("MagicBirdStudio_RBAC.permissionmenumapping", "permissioninfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<permissioninfo>("MagicBirdStudio_RBAC.permissionmenumapping", "permissioninfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<permissioninfo> permissioninfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<permissioninfo>("MagicBirdStudio_RBAC.permissionmenumapping", "permissioninfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<permissioninfo>("MagicBirdStudio_RBAC.permissionmenumapping", "permissioninfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MagicBirdStudio_RBAC", Name="permissioninfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class permissioninfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new permissioninfo object.
        /// </summary>
        /// <param name="permissionID">Initial value of the PermissionID property.</param>
        /// <param name="permissionName">Initial value of the PermissionName property.</param>
        public static permissioninfo Createpermissioninfo(global::System.Int32 permissionID, global::System.String permissionName)
        {
            permissioninfo permissioninfo = new permissioninfo();
            permissioninfo.PermissionID = permissionID;
            permissioninfo.PermissionName = permissionName;
            return permissioninfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionID
        {
            get
            {
                return _PermissionID;
            }
            set
            {
                if (_PermissionID != value)
                {
                    OnPermissionIDChanging(value);
                    ReportPropertyChanging("PermissionID");
                    _PermissionID = StructuralObject.SetValidValue(value, "PermissionID");
                    ReportPropertyChanged("PermissionID");
                    OnPermissionIDChanged();
                }
            }
        }
        private global::System.Int32 _PermissionID;
        partial void OnPermissionIDChanging(global::System.Int32 value);
        partial void OnPermissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PermissionName
        {
            get
            {
                return _PermissionName;
            }
            set
            {
                OnPermissionNameChanging(value);
                ReportPropertyChanging("PermissionName");
                _PermissionName = StructuralObject.SetValidValue(value, false, "PermissionName");
                ReportPropertyChanged("PermissionName");
                OnPermissionNameChanged();
            }
        }
        private global::System.String _PermissionName;
        partial void OnPermissionNameChanging(global::System.String value);
        partial void OnPermissionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MagicBirdStudio_RBAC", "permissionmenumapping", "menuinfo")]
        public EntityCollection<menuinfo> menuinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<menuinfo>("MagicBirdStudio_RBAC.permissionmenumapping", "menuinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<menuinfo>("MagicBirdStudio_RBAC.permissionmenumapping", "menuinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MagicBirdStudio_RBAC", "rolepermissionmapping", "roleinfo")]
        public EntityCollection<roleinfo> roleinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<roleinfo>("MagicBirdStudio_RBAC.rolepermissionmapping", "roleinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<roleinfo>("MagicBirdStudio_RBAC.rolepermissionmapping", "roleinfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MagicBirdStudio_RBAC", Name="roleinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class roleinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new roleinfo object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static roleinfo Createroleinfo(global::System.Int32 roleID, global::System.String roleName)
        {
            roleinfo roleinfo = new roleinfo();
            roleinfo.RoleID = roleID;
            roleinfo.RoleName = roleName;
            return roleinfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, true, "RoleDescription");
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MagicBirdStudio_RBAC", "grouprolemapping", "groupmanager")]
        public EntityCollection<groupmanager> groupmanagers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<groupmanager>("MagicBirdStudio_RBAC.grouprolemapping", "groupmanager");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<groupmanager>("MagicBirdStudio_RBAC.grouprolemapping", "groupmanager", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MagicBirdStudio_RBAC", "rolepermissionmapping", "permissioninfo")]
        public permissioninfo permissioninfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<permissioninfo>("MagicBirdStudio_RBAC.rolepermissionmapping", "permissioninfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<permissioninfo>("MagicBirdStudio_RBAC.rolepermissionmapping", "permissioninfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<permissioninfo> permissioninfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<permissioninfo>("MagicBirdStudio_RBAC.rolepermissionmapping", "permissioninfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<permissioninfo>("MagicBirdStudio_RBAC.rolepermissionmapping", "permissioninfo", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
